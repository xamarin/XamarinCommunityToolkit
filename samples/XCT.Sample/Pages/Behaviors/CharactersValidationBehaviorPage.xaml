<?xml version="1.0" encoding="UTF-8" ?>
<pages:BasePage x:Name="Page"
                x:Class="Xamarin.CommunityToolkit.Sample.Pages.Behaviors.CharactersValidationBehaviorPage"
                xmlns="http://xamarin.com/schemas/2014/forms"
                xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
                xmlns:pages="clr-namespace:Xamarin.CommunityToolkit.Sample.Pages">

    <pages:BasePage.Resources>
        <Style x:Key="InvalidEntryStyle"
               TargetType="Entry">
            <Setter Property="TextColor" Value="Red"/>
        </Style>

        <Style x:Key="ValidEntryStyle"
               TargetType="Entry">
            <Setter Property="TextColor" Value="Green"/>
        </Style>
    </pages:BasePage.Resources>

    <StackLayout Padding="{StaticResource ContentPadding}"
                 Spacing="25"
                 VerticalOptions="StartAndExpand">
        <Label Text="Text color will change accordingly to the style that is configured when an invalid string is entered."/>
        <Frame Margin="{StaticResource ContentPadding}"
               CornerRadius="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Label Text="CharacterType"/>
                <Picker x:Name="CharacterTypePicker" Grid.Column="1"
                        Title="CharacterType"
                        ItemsSource="{Binding CharacterTypes, Source={x:Reference Page}}"
                        SelectedIndex="1"/>
                <Label Grid.Row="1"
                       Text="MinimumCharacterCountEntry"/>
                <Entry x:Name="MinimumCharacterCountEntry" Grid.Row="1" Grid.Column="1"
                       Keyboard="Numeric"
                       Text="2"/>
                <Label Grid.Row="2"
                       Text="MaximumCharacterCountEntry"/>
                <Entry x:Name="MaximumCharacterCountEntry" Grid.Row="2" Grid.Column="1"
                       Keyboard="Numeric"
                       Text="20"/>
            </Grid>
        </Frame>
        <Label Text="Type characters for validation behavior according to the settings you set upon."/>
        <Entry Placeholder="Type characters...">
            <Entry.Behaviors>
                <xct:CharactersValidationBehavior CharacterType="{Binding SelectedItem, Source={x:Reference CharacterTypePicker}}"
                                                  InvalidStyle="{StaticResource InvalidEntryStyle}"
                                                  ValidStyle="{StaticResource ValidEntryStyle}"
                                                  MaximumCharacterCount="{Binding Text, Source={x:Reference MaximumCharacterCountEntry}}"
                                                  MinimumCharacterCount="{Binding Text, Source={x:Reference MinimumCharacterCountEntry}}"/>
            </Entry.Behaviors>
        </Entry>

        <Label Text="The same but styling handled by visual state manager."/>
        <Entry Placeholder="Type characters...">
            <Entry.Behaviors>
                <xct:CharactersValidationBehavior Flags="ValidateOnValueChanging"
                                                  CharacterType="{Binding SelectedItem, Source={x:Reference CharacterTypePicker}}"
                                                  MaximumCharacterCount="{Binding Text, Source={x:Reference MaximumCharacterCountEntry}}"
                                                  MinimumCharacterCount="{Binding Text, Source={x:Reference MinimumCharacterCountEntry}}"/>
            </Entry.Behaviors>

            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Valid">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="Green"/>
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Invalid">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="IndianRed"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Entry>

    </StackLayout>
</pages:BasePage>
